{"version":3,"sources":["Table.js","Form.js","App.js","reportWebVitals.js","index.js"],"names":["TableHeader","TableBody","props","rows","characterData","map","row","index","name","job","onClick","removeCharacter","Table","this","Component","Form","initialState","state","handleChange","event","target","value","setState","submitForm","handleSubmit","htmlFor","type","id","onChange","App","characters","filter","character","i","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8SAGMA,EAAc,WAChB,OACI,gCACI,+BACI,sCACA,qCACA,8CAMVC,EAAY,SAACC,GACf,IAAMC,EAAOD,EAAME,cAAcC,KAAI,SAACC,EAAKC,GACvC,OACI,+BACI,6BAAKD,EAAIE,OACT,6BAAKF,EAAIG,MACT,6BACI,wBAAQC,QAAS,kBAAMR,EAAMS,gBAAgBJ,IAA7C,wBAJCA,MASjB,OACI,gCACKJ,KAkBES,E,4JAZX,WAAU,IAAD,EACoCC,KAAKX,MAAvCE,EADF,EACEA,cAAeO,EADjB,EACiBA,gBAEtB,OACI,kCACI,cAAC,EAAD,IACA,cAAC,EAAD,CAAWP,cAAeA,EAAeO,gBAAiBA,W,GAPtDG,a,OCqBLC,G,kNAlDXC,aAAe,CACXR,KAAM,GACNC,IAAK,I,EAGTQ,MAAQ,EAAKD,a,EAEbE,aAAe,SAACC,GAAW,IAAD,EACAA,EAAMC,OAArBZ,EADe,EACfA,KAAMa,EADS,EACTA,MAEb,EAAKC,SAAL,eACKd,EAAOa,K,EAIhBE,WAAa,WACT,EAAKrB,MAAMsB,aAAa,EAAKP,OAC7B,EAAKK,SAAS,EAAKN,e,4CAGvB,WAAU,IAAD,EACeH,KAAKI,MAAlBT,EADF,EACEA,KAAMC,EADR,EACQA,IACb,OACI,iCACI,uBAAOgB,QAAQ,OAAf,kBACA,uBACIC,KAAK,OACLlB,KAAK,OACLmB,GAAG,OACHN,MAAOb,EACPoB,SAAUf,KAAKK,eAEnB,uBAAOO,QAAQ,MAAf,iBACA,uBACIC,KAAK,OACLlB,KAAK,MACLmB,GAAG,MACHN,MAAOZ,EACPmB,SAAUf,KAAKK,eAEnB,uBACIQ,KAAK,SACLL,MAAM,SACNX,QAASG,KAAKU,oB,GA5CfT,cCsDJe,E,4MAnDbZ,MAAQ,CACNa,WAAY,CACV,CACEtB,KAAM,UACNC,IAAK,WAEP,CACED,KAAM,MACNC,IAAK,WAEP,CACED,KAAM,MACNC,IAAK,mBAEP,CACED,KAAM,SACNC,IAAK,e,EAKXE,gBAAkB,SAACJ,GAAW,IACrBuB,EAAc,EAAKb,MAAnBa,WAEP,EAAKR,SAAS,CACZQ,WAAYA,EAAWC,QAAO,SAACC,EAAWC,GACxC,OAAOA,IAAM1B,Q,EAKnBiB,aAAe,SAACQ,GACd,EAAKV,SAAS,CACZQ,WAAW,GAAD,mBACL,EAAKb,MAAMa,YADN,CAERE,O,4CAKN,WAAU,IACDF,EAAcjB,KAAKI,MAAnBa,WACP,OACE,sBAAKI,UAAU,YAAf,UACE,cAAC,EAAD,CAAO9B,cAAe0B,EAAYnB,gBAAiBE,KAAKF,kBACxD,cAAC,EAAD,CAAMa,aAAcX,KAAKW,sB,GA9CfV,aCMHqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e9ccfdf2.chunk.js","sourcesContent":["import { Component } from \"react\";\nimport './Table.css'\n\nconst TableHeader = () => {\n    return (\n        <thead>\n            <tr>\n                <th>Name</th>\n                <th>Job</th>\n                <th>Remove</th>\n            </tr>\n        </thead>\n    )\n}\n\nconst TableBody = (props) => {\n    const rows = props.characterData.map((row, index) => {\n        return (\n            <tr key={index}>\n                <td>{row.name}</td>\n                <td>{row.job}</td>\n                <td>\n                    <button onClick={() => props.removeCharacter(index)}>Delete</button>\n                </td>\n            </tr>\n        )\n    })\n    return (\n        <tbody>\n            {rows}\n        </tbody>\n    )\n}\n\nclass Table extends Component {\n    render() {\n        const {characterData, removeCharacter} = this.props\n\n        return (\n            <table>\n                <TableHeader />\n                <TableBody characterData={characterData} removeCharacter={removeCharacter}/>\n            </table>\n        )\n    }\n}\n\nexport default Table","import { Component } from \"react\";\n\nimport './Form.css';\n\nclass Form extends Component {\n    initialState = {\n        name: '',\n        job: ''\n    }\n\n    state = this.initialState\n\n    handleChange = (event) => {\n        const {name, value} = event.target\n\n        this.setState({\n            [name]: value,\n        })\n    }\n\n    submitForm = () => {\n        this.props.handleSubmit(this.state)\n        this.setState(this.initialState)\n    }\n\n    render() {\n        const {name, job} = this.state\n        return (\n            <form>\n                <label htmlFor=\"name\">Name</label>\n                <input\n                    type=\"text\"\n                    name=\"name\"\n                    id=\"name\"\n                    value={name}\n                    onChange={this.handleChange}\n                />\n                <label htmlFor=\"job\">Job</label>\n                <input\n                    type=\"text\"\n                    name=\"job\"\n                    id=\"job\"\n                    value={job}\n                    onChange={this.handleChange}\n                />\n                <input \n                    type=\"button\"\n                    value=\"Submit\"\n                    onClick={this.submitForm}\n                />\n            </form>\n        )\n    }\n}\n\nexport default Form","import { Component } from 'react';\nimport './App.css';\n\nimport Table from './Table';\nimport Form from './Form';\n\nclass App extends Component {\n  state = {\n    characters: [\n      {\n        name: 'Charlie',\n        job: 'Janitor'\n      },\n      {\n        name: 'Mac',\n        job: 'Bouncer'\n      },\n      {\n        name: 'Dee',\n        job: 'Aspring actress'\n      },\n      {\n        name: 'Dennis',\n        job: 'Bartender'\n      }\n    ]\n  }\n\n  removeCharacter = (index) => {\n    const {characters} = this.state\n\n    this.setState({\n      characters: characters.filter((character, i) => {\n        return i !== index\n      })\n    })\n  }\n\n  handleSubmit = (character) => {\n    this.setState({\n      characters: [\n        ...this.state.characters,\n        character\n      ]\n    })\n  }\n\n  render() {\n    const {characters} = this.state\n    return (\n      <div className=\"container\">\n        <Table characterData={characters} removeCharacter={this.removeCharacter} />\n        <Form handleSubmit={this.handleSubmit} />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}